<%- include ("../../../partials/header.ejs") %>
<%- include("../../../partials/navbar.ejs") %>

<body>
    <div class="container">
      <hr />
      <h2>Conta Corrente</h2>
    <div class="row g-2">
      <div class="col-2">
        <div class="card text-center">
          <a class="btn btn-primary form-control" href="/admin/contaCorrente/new">Adicionar</a>
        </div>
      </div>
      <div class="col-2">
        <div class="card text-center">
           <div class="dropdown">
    <button class="btn dropdown-toggle form-control" type="button" data-bs-toggle="dropdown" aria-expanded="false">
    Investidor
    </button>
    <ul class="dropdown-menu">
      <li >
        <a class="dropdown-item"  href="/admin/contaCorrente">TODOS</a>
      </li>
     <% investidores.forEach(investidor => { %>
    <li >
            <a class="dropdown-item"  href="/contaCorrente/<%= investidor.id %>"><%= investidor.name %></a>
        </li>
     <% }) %>
    </ul>
    </div>
    
        </div>
                </div>
                <div class="col-3">
                  <div class="card">
                    <div class="dropdown">
                      <button class="btn dropdown-toggle form-control" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Periodo
                      </button>
                      <ul class="dropdown-menu">
                        <li>
                          <form action="/contaCorrente" method="get">
                            <div class="mb-3">
                              <label for="start" class="form-label">Data de início:</label>
                              <input type="date" class="form-control" id="start" name="start">
                            </div>
                            <div class="mb-3">
                              <label for="end" class="form-label">Data de fim:</label>
                              <input type="date" class="form-control" id="end" name="end">
                            </div>
                            <button type="submit" class="btn btn-primary">Filtrar</button>
                          </form>
                        </li>
                      </ul>
                    </div>
                  </div>
                </div>
              <div class="col-2">
        <div class="card">
          <!--Barra de Pesquisa-->
          <form class="form-search">
            <input
              class="form-control"
              type="text"
              name="search"
              id="search"
              placeholder="Pesquisar..."
            />
          </form>
        </div>
                </div>
                 <div class="col-3">
        <div class="card">
          <!--Barra de Pesquisa-->
         <button class="btn btn-success form-control" id="btnCompartilhar">Compartilhar</button>

        </div>
                </div>
    </div>
   <div id="investidorSelecionadoDiv" class="fixed-investidor">Parceria: <%= investidorNome %></div>

      <hr />
      <div class="row g-2">
       <hr />
       <div  class="table-responsive-xxl">
        <div  class="table1 text-center">
          <table class="table table-bordered text-center">
            <thead>
              <tr >
                <th>Capital Investido em Compra</th>
                <th>Capital Retorno de Venda</th>
                <th>Valor Disponível para Compra</th>
              </tr>
            </thead>
            <tbody >
                <tr >
                  <td><%= amountCompra %></td>
                  <td>
                    <%= new Intl.NumberFormat('pt-BR', { style: 'currency', currency: 'BRL' }).format(totalVendaSum) %>
    </td>
    <td>
      <%= new Intl.NumberFormat('pt-BR', { style: 'currency', currency: 'BRL' }).format(Total) %>
    </td>
               
              </tr>
            </tbody>
          </table>
            </div>
    <table id="tab" data-type="table-menu" class="table table-bordered text-center">
      <thead>
        <tr id="table-header">
          <th>Nome</th>
          <th>Data</th>
          <th>Categoria</th>
          <th>Valor</th>
          <th>Descrição</th>
          <th>Ações</th>
        </tr>
      </thead>
      <tbody id="demo">
                 <% if (contaCorrente.length === 0) { %>
        <tr>
          <td colspan="6" class="nenhuma">Nenhum registro</td>
        </tr>
      <% } else { %>
        <% contaCorrente.forEach(contaCorrente=> { %>
        <tr  class="pesquisar" href="">
          <td><%= contaCorrente.investidore.name %></td>
          <td><%= contaCorrente.data %></td>
          <td><%= contaCorrente.category %></td>
          <td><%= new Intl.NumberFormat('pt-BR', { style: 'currency', currency: 'BRL' }).format(contaCorrente.valor) %></td>
          <td><%= contaCorrente.obs%></td>
           <td>
            <a
              href="/admin/contaCorrente/edit/<%= contaCorrente.id %>"
              class="btn btn-warning btn-sm"
              >Editar</a
            >
            <form
              method="POST"
              action="/contaCorrente/delete"
              style="display: inline;"
              onsubmit="confirmarDelecao(event, this)"
            >
              <input type="hidden" name="id" value="<%= contaCorrente.id %>" />
              <input type="hidden" name="code" value="<%= contaCorrente.code %>" /> <!-- Novo campo para o code -->
              <button class="btn btn-danger btn-sm">Deletar</button>
            </form>
          </td>
        </tr>
          <% }) %>
      <% } %>
      </tbody>
    </table>

<div class="row">
  <div class="col"></div>
  <div class="col-6">
    <nav aria-label="Page navigation example">
      <ul class="pagination">
        <li class="page-item <% if (currentPage === 1) { %>disabled<% } %>">
          <a class="page-link" href="?page=<%= currentPage - 1 %>" aria-label="Previous">
            <span aria-hidden="true">Anterior</span>
          </a>
        </li>
        <% for (let i = startPage; i <= endPage; i++) { %>
          <li class="page-item <% if (i === currentPage) { %>active<% } %>">
            <a class="page-link" href="?page=<%= i %>"><%= i %></a>
          </li>
        <% } %>
        <li class="page-item <% if (currentPage === totalPages) { %>disabled<% } %>">
          <a class="page-link" href="?page=<%= currentPage + 1 %>" aria-label="Next">
            <span aria-hidden="true">Próximo</span>
          </a>
        </li>
      </ul>
    </nav>
  </div>
</div>

  <br>
    </div>

      </div>
</div>
<br>
      </body>


<%- include ("../../../partials/footer.ejs") %>

<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
<script>
  // Função para capturar o nome do investidor selecionado
  const dropdownItems = document.querySelectorAll('.dropdown-item');
  let nomeInvestidor = "<%= investidorNome %>"; // Valor inicial vindo do servidor

  // Atualiza o nome do investidor no div ao clicar no item
  dropdownItems.forEach(item => {
    item.addEventListener('click', function () {
      nomeInvestidor = this.textContent.trim(); // Captura o nome do investidor
      document.getElementById('investidorSelecionadoDiv').textContent = `Parceria: ${nomeInvestidor}`; // Exibe o nome selecionado no div fixo
    });
  });

  // Geração do PDF
  document.getElementById('btnCompartilhar').addEventListener('click', function () {
    const { jsPDF } = window.jspdf;
    const doc = new jsPDF();

    // Definindo a fonte e tamanho padrão
    doc.setFont('Helvetica', 'normal');
    doc.setFontSize(12);

    // Adicionando um título com uma fonte maior e em negrito
    doc.setFontSize(18);
    doc.setFont('Helvetica', 'bold');
    doc.text('Relatório Financeiro', 105, 20, null, null, 'center');

    // Adicionando uma linha divisória abaixo do título
    doc.setLineWidth(0.5);
    doc.line(10, 25, 200, 25);

    // Adicionando o nome do investidor selecionado
    doc.setFontSize(14);
    doc.setFont('Helvetica', 'normal');
    doc.text(`Parceria: ${nomeInvestidor}`, 10, 35);

    // Adicionando uma tabela separada para as informações financeiras
    let startY = 50;
    const lineHeight = 10;
    const sectionPadding = 5;
    const sectionLineWidth = 0.5; // Largura da linha divisória

    // Seções do relatório
    const sections = [
      {
        title: 'Estoque',
        data: [
          { label: 'Estoque Atual', value: '<%= estoque %>' }
        ]
      },
      {
        title: 'Entradas',
        data: [
          { label: 'Número de Animais Comprados', value: '<%= compradosTotal %>' },
          { label: 'Capital Investido em Compra', value: '<%= amountCompra %>' }
        ]
      },
      {
        title: 'Saídas',
        data: [
          { label: 'Mortes', value: '<%= morte %>' },
          { label: 'Vendidos', value: '<%= vendidos %>' },
          { label: 'Capital Retorno de Venda', value: new Intl.NumberFormat('pt-BR', { style: 'currency', currency: 'BRL' }).format('<%= totalVendaSum %>') },
          { label: 'Saldo', value: new Intl.NumberFormat('pt-BR', { style: 'currency', currency: 'BRL' }).format('<%= Total %>') }
        ]
      }
    ];

    // Função para adicionar cada seção ao PDF
    sections.forEach(section => {
      doc.setFontSize(16);
      doc.setFont('Helvetica', 'bold');
      doc.text(section.title, 10, startY);
      startY += lineHeight;

      doc.setFontSize(12);
      doc.setFont('Helvetica', 'normal');
      section.data.forEach(item => {
        doc.text(`${item.label}:`, 10, startY);
        doc.text(`${item.value}`, 100, startY);  // Alinha o valor à direita
        startY += lineHeight;
      });

      // Adiciona uma linha horizontal separadora
      doc.setLineWidth(0.2);
      doc.line(10, startY + sectionPadding, 200, startY + sectionPadding);

      // Adiciona um espaço entre as seções
      startY += sectionPadding + lineHeight;
    });

    // Adicionando bordas à página
    doc.setDrawColor(0); // Define a cor da borda (preta)
    doc.setLineWidth(1);
    doc.rect(5, 5, 200, 287); // Desenha um retângulo ao redor da página

    // Salvando o PDF
    doc.save('Relatorio_Financeiro.pdf');
  });
</script>


<script>
  //delete Script
  function confirmarDelecao(event, form) {
    event.preventDefault();
    var decision = confirm("Você quer deletar esta Compra?");
    if (decision) {
      form.submit();
    }
  }

  ////////////////////////////
  // search script
  const inputSearch = document.querySelector("#search");
  const tableMenu = document.querySelector("[data-type='table-menu']");

  const trs = Array.from(tableMenu.querySelectorAll("tbody tr"));
  const trsPesquisar = Array.from(
    tableMenu.querySelectorAll("tr.pesquisar")
  );

  inputSearch.addEventListener("input", function () {
    const str = this.value;
    if (str) {
      filterData(str);
    } else {
      showAllItems();
    }
  });

  function showAllItems() {
    trs.forEach((tr) => tr.classList.remove("hide"));
  }

  function filterData(str) {
    showAllItems();
    trsPesquisar.forEach((trPesquisar) => {
      let found = false;

      for (let i = 0; i < trs.length; i++) {
        let tr = trs[i];
        if (tr.textContent.toLowerCase().includes(str.toLowerCase())) {
          found = true;
          tr.classList.remove("hide");
        } else {
          tr.classList.add("hide");
        }
      }
    });
  }
  /////////////////////////////////////////////////
</script>


